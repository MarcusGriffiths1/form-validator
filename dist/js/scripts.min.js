function FormInput(a,b){this._inputId=a,this._validationEvent=b||"blur",this._validators=[],this.isValid=!0,this.invalidMessages=[]}function FormValidator(a){this._formId=a,this._formElement=document.getElementById(this._formId),this._formInputs=[]}function MaxLengthValidator(a,b){Validator.call(this,a,b),this.type="maxlength"}function MinLengthValidator(a,b){Validator.call(this,a,b),this.type="minlength"}function RegexValidator(a,b){Validator.call(this,a,b),this.type="regex"}function RequiredValidator(a,b){Validator.call(this,a,b),this.type="required"}function Validator(a,b){this._pattern=a,this.invalidMessage=b}FormInput.prototype.validate=function(){var a=this;console.log(this._validators),this._getInputElement().onblur=function(){a.invalidMessages=[];var b=0,c=a._validators.length;for(b;b<c;b++)a._validators[b].validate(a._getInputElement().value)||a.invalidMessages.push(a._validators[b].invalidMessage);console.log(a.invalidMessages)}},FormInput.prototype.addValidator=function(a,b,c){var d;this._validatorExists(a)?console.error("Validator of type "+a+" already exists, only one type of validator can be set per input"):(d=this._createValidator(a,b,c),this._validators.push(d))},FormInput.prototype._validatorExists=function(a){var b=0,c=this._validators.length;for(b;b<c;b++)if(this._validators[b].type==a)return!0;return!1},FormInput.prototype._createValidator=function(a,b,c){return"maxlength"==a?new MaxLengthValidator(b,c):"minlength"==a?new MinLengthValidator(b,c):"regexp"==a?new RegexValidator(b,c):"required"==a?new RequiredValidator(b,c):void console.error("Can't find validation of type: "+a)},FormInput.prototype.getInputId=function(){return this._inputId},FormInput.prototype._getInputElement=function(){return document.getElementById(this._inputId)},FormValidator.prototype.init=function(){var a=0,b=this._formInputs.length;for(a;a<b;a++)this._formInputs[a].validate()},FormValidator.prototype.addValidation=function(a,b,c,d,e){var f;this._inputExists(a)?(f=this._getInput(a),f.addValidator(b,c,d)):(f=new FormInput(a,e),f.addValidator(b,c,d),this._formInputs.push(f))},FormValidator.prototype._inputExists=function(a){var b=0,c=this._formInputs.length;for(b;b<c;b++)if(this._formInputs[b].getInputId()==a)return!0;return!1},FormValidator.prototype._getInput=function(a){var b=0,c=this._formInputs.length;for(b;b<c;b++)if(this._formInputs[b].getInputId()==a)return this._formInputs[b]},MaxLengthValidator.prototype=Object.create(Validator.prototype),MaxLengthValidator.prototype.validate=function(a){return!(a.length>this._pattern)},MinLengthValidator.prototype=Object.create(Validator.prototype),MinLengthValidator.prototype.validate=function(a){return!(a.length<this._pattern)},RegexValidator.prototype=Object.create(Validator.prototype),RegexValidator.prototype.validate=function(){},RequiredValidator.prototype=Object.create(Validator.prototype),RequiredValidator.prototype.validate=function(a){return 0!==a.trim().length},Validator.prototype.validate=function(a){console.error("Please override this abstract function")};var checkboxFunctionality=function(){function a(a){a.parent().siblings().removeClass("selected"),a.parent().addClass("selected")}function b(a,b,e){a.value==b?(e.slideDown(),c(d,!0)):(e.slideUp(),c(d,!1))}function c(a,b){var c=0,d=a.length;for(c;c<d;c++)document.getElementById(a[c]).required=b}var d=["add1","city","postcode"],e=document.getElementById("postal").checked?$(".js-prospectform__address"):$(".js-prospectform__address").hide();$("input[type=radio]").click(function(){a($(this)),b(this,"postal",e)})},formValidation=function(){var a=new FormValidator("prospectform");a.addValidation("fname","required",5,"is a required field"),a.addValidation("fname","minlength",5,"cannot be less than 5 characters"),a.addValidation("fname","maxlength",20,"cannot be more than 20 characters"),a.addValidation("lname","minlength",5,"cannot be less than 5 characters"),a.addValidation("lname","maxlength",20,"cannot be more than 20 characters"),a.init()};$(function(){checkboxFunctionality(),formValidation()});